/*
 * This file is generated by jOOQ.
 */
package io.jking.tickster.jooq.tables;


import io.jking.tickster.jooq.Keys;
import io.jking.tickster.jooq.Public;
import io.jking.tickster.jooq.tables.records.GuildDataRecord;
import org.jooq.Record;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GuildData extends TableImpl<GuildDataRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.guild_data</code>
     */
    public static final GuildData GUILD_DATA = new GuildData();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GuildDataRecord> getRecordType() {
        return GuildDataRecord.class;
    }

    /**
     * The column <code>public.guild_data.guild_id</code>.
     */
    public final TableField<GuildDataRecord, Long> GUILD_ID = createField(DSL.name("guild_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.guild_data.owner_id</code>.
     */
    public final TableField<GuildDataRecord, Long> OWNER_ID = createField(DSL.name("owner_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.guild_data.ticket_manager</code>.
     */
    public final TableField<GuildDataRecord, Long> TICKET_MANAGER = createField(DSL.name("ticket_manager"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.field("0", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.guild_data.ticket_channel</code>.
     */
    public final TableField<GuildDataRecord, Long> TICKET_CHANNEL = createField(DSL.name("ticket_channel"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.field("0", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.guild_data.ticket_category</code>.
     */
    public final TableField<GuildDataRecord, Long> TICKET_CATEGORY = createField(DSL.name("ticket_category"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.field("0", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.guild_data.log_channel</code>.
     */
    public final TableField<GuildDataRecord, Long> LOG_CHANNEL = createField(DSL.name("log_channel"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.field("0", SQLDataType.BIGINT)), this, "");

    private GuildData(Name alias, Table<GuildDataRecord> aliased) {
        this(alias, aliased, null);
    }

    private GuildData(Name alias, Table<GuildDataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.guild_data</code> table reference
     */
    public GuildData(String alias) {
        this(DSL.name(alias), GUILD_DATA);
    }

    /**
     * Create an aliased <code>public.guild_data</code> table reference
     */
    public GuildData(Name alias) {
        this(alias, GUILD_DATA);
    }

    /**
     * Create a <code>public.guild_data</code> table reference
     */
    public GuildData() {
        this(DSL.name("guild_data"), null);
    }

    public <O extends Record> GuildData(Table<O> child, ForeignKey<O, GuildDataRecord> key) {
        super(child, key, GUILD_DATA);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public UniqueKey<GuildDataRecord> getPrimaryKey() {
        return Keys.GUILD_DATA_PKEY;
    }

    @Override
    public GuildData as(String alias) {
        return new GuildData(DSL.name(alias), this);
    }

    @Override
    public GuildData as(Name alias) {
        return new GuildData(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GuildData rename(String name) {
        return new GuildData(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GuildData rename(Name name) {
        return new GuildData(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, Long, Long, Long, Long, Long> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
