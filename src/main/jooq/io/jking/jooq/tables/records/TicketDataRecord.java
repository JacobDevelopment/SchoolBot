/*
 * This file is generated by jOOQ.
 */
package io.jking.jooq.tables.records;


import io.jking.jooq.tables.TicketData;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TicketDataRecord extends UpdatableRecordImpl<TicketDataRecord> implements Record5<Long, Long, Long, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.ticket_data.channel_id</code>.
     */
    public TicketDataRecord setChannelId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.ticket_data.channel_id</code>.
     */
    public Long getChannelId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.ticket_data.guild_id</code>.
     */
    public TicketDataRecord setGuildId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.ticket_data.guild_id</code>.
     */
    public Long getGuildId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.ticket_data.creator_id</code>.
     */
    public TicketDataRecord setCreatorId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.ticket_data.creator_id</code>.
     */
    public Long getCreatorId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.ticket_data.creation</code>.
     */
    public TicketDataRecord setCreation(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.ticket_data.creation</code>.
     */
    public LocalDateTime getCreation() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.ticket_data.expiry</code>.
     */
    public TicketDataRecord setExpiry(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.ticket_data.expiry</code>.
     */
    public LocalDateTime getExpiry() {
        return (LocalDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, Long, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Long, Long, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return TicketData.TICKET_DATA.CHANNEL_ID;
    }

    @Override
    public Field<Long> field2() {
        return TicketData.TICKET_DATA.GUILD_ID;
    }

    @Override
    public Field<Long> field3() {
        return TicketData.TICKET_DATA.CREATOR_ID;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return TicketData.TICKET_DATA.CREATION;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return TicketData.TICKET_DATA.EXPIRY;
    }

    @Override
    public Long component1() {
        return getChannelId();
    }

    @Override
    public Long component2() {
        return getGuildId();
    }

    @Override
    public Long component3() {
        return getCreatorId();
    }

    @Override
    public LocalDateTime component4() {
        return getCreation();
    }

    @Override
    public LocalDateTime component5() {
        return getExpiry();
    }

    @Override
    public Long value1() {
        return getChannelId();
    }

    @Override
    public Long value2() {
        return getGuildId();
    }

    @Override
    public Long value3() {
        return getCreatorId();
    }

    @Override
    public LocalDateTime value4() {
        return getCreation();
    }

    @Override
    public LocalDateTime value5() {
        return getExpiry();
    }

    @Override
    public TicketDataRecord value1(Long value) {
        setChannelId(value);
        return this;
    }

    @Override
    public TicketDataRecord value2(Long value) {
        setGuildId(value);
        return this;
    }

    @Override
    public TicketDataRecord value3(Long value) {
        setCreatorId(value);
        return this;
    }

    @Override
    public TicketDataRecord value4(LocalDateTime value) {
        setCreation(value);
        return this;
    }

    @Override
    public TicketDataRecord value5(LocalDateTime value) {
        setExpiry(value);
        return this;
    }

    @Override
    public TicketDataRecord values(Long value1, Long value2, Long value3, LocalDateTime value4, LocalDateTime value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TicketDataRecord
     */
    public TicketDataRecord() {
        super(TicketData.TICKET_DATA);
    }

    /**
     * Create a detached, initialised TicketDataRecord
     */
    public TicketDataRecord(Long channelId, Long guildId, Long creatorId, LocalDateTime creation, LocalDateTime expiry) {
        super(TicketData.TICKET_DATA);

        setChannelId(channelId);
        setGuildId(guildId);
        setCreatorId(creatorId);
        setCreation(creation);
        setExpiry(expiry);
    }

    /**
     * Create a detached, initialised TicketDataRecord
     */
    public TicketDataRecord(io.jking.jooq.tables.pojos.TicketData value) {
        super(TicketData.TICKET_DATA);

        if (value != null) {
            setChannelId(value.getChannelId());
            setGuildId(value.getGuildId());
            setCreatorId(value.getCreatorId());
            setCreation(value.getCreation());
            setExpiry(value.getExpiry());
        }
    }
}
