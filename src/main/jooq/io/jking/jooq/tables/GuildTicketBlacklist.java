/*
 * This file is generated by jOOQ.
 */
package io.jking.jooq.tables;


import io.jking.jooq.Keys;
import io.jking.jooq.Public;
import io.jking.jooq.tables.records.GuildTicketBlacklistRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GuildTicketBlacklist extends TableImpl<GuildTicketBlacklistRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.guild_ticket_blacklist</code>
     */
    public static final GuildTicketBlacklist GUILD_TICKET_BLACKLIST = new GuildTicketBlacklist();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GuildTicketBlacklistRecord> getRecordType() {
        return GuildTicketBlacklistRecord.class;
    }

    /**
     * The column <code>public.guild_ticket_blacklist.guild_id</code>.
     */
    public final TableField<GuildTicketBlacklistRecord, Long> GUILD_ID = createField(DSL.name("guild_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column
     * <code>public.guild_ticket_blacklist.blacklisted_user_ids</code>.
     */
    public final TableField<GuildTicketBlacklistRecord, Long[]> BLACKLISTED_USER_IDS = createField(DSL.name("blacklisted_user_ids"), SQLDataType.BIGINT.getArrayDataType(), this, "");

    private GuildTicketBlacklist(Name alias, Table<GuildTicketBlacklistRecord> aliased) {
        this(alias, aliased, null);
    }

    private GuildTicketBlacklist(Name alias, Table<GuildTicketBlacklistRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.guild_ticket_blacklist</code> table
     * reference
     */
    public GuildTicketBlacklist(String alias) {
        this(DSL.name(alias), GUILD_TICKET_BLACKLIST);
    }

    /**
     * Create an aliased <code>public.guild_ticket_blacklist</code> table
     * reference
     */
    public GuildTicketBlacklist(Name alias) {
        this(alias, GUILD_TICKET_BLACKLIST);
    }

    /**
     * Create a <code>public.guild_ticket_blacklist</code> table reference
     */
    public GuildTicketBlacklist() {
        this(DSL.name("guild_ticket_blacklist"), null);
    }

    public <O extends Record> GuildTicketBlacklist(Table<O> child, ForeignKey<O, GuildTicketBlacklistRecord> key) {
        super(child, key, GUILD_TICKET_BLACKLIST);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public UniqueKey<GuildTicketBlacklistRecord> getPrimaryKey() {
        return Keys.GUILD_TICKET_BLACKLIST_PKEY;
    }

    @Override
    public List<ForeignKey<GuildTicketBlacklistRecord, ?>> getReferences() {
        return Arrays.asList(Keys.GUILD_TICKET_BLACKLIST__GUILD_TICKET_BLACKLIST_GUILD_ID_FKEY);
    }

    private transient GuildData _guildData;

    public GuildData guildData() {
        if (_guildData == null)
            _guildData = new GuildData(this, Keys.GUILD_TICKET_BLACKLIST__GUILD_TICKET_BLACKLIST_GUILD_ID_FKEY);

        return _guildData;
    }

    @Override
    public GuildTicketBlacklist as(String alias) {
        return new GuildTicketBlacklist(DSL.name(alias), this);
    }

    @Override
    public GuildTicketBlacklist as(Name alias) {
        return new GuildTicketBlacklist(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GuildTicketBlacklist rename(String name) {
        return new GuildTicketBlacklist(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GuildTicketBlacklist rename(Name name) {
        return new GuildTicketBlacklist(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Long[]> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
