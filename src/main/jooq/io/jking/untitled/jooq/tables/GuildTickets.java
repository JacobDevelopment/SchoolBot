/*
 * This file is generated by jOOQ.
 */
package io.jking.untitled.jooq.tables;


import io.jking.untitled.jooq.Keys;
import io.jking.untitled.jooq.Public;
import io.jking.untitled.jooq.tables.records.GuildTicketsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GuildTickets extends TableImpl<GuildTicketsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.guild_tickets</code>
     */
    public static final GuildTickets GUILD_TICKETS = new GuildTickets();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GuildTicketsRecord> getRecordType() {
        return GuildTicketsRecord.class;
    }

    /**
     * The column <code>public.guild_tickets.id</code>.
     */
    public final TableField<GuildTicketsRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.guild_tickets.guild_id</code>.
     */
    public final TableField<GuildTicketsRecord, Long> GUILD_ID = createField(DSL.name("guild_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.guild_tickets.creator_id</code>.
     */
    public final TableField<GuildTicketsRecord, Long> CREATOR_ID = createField(DSL.name("creator_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.guild_tickets.ticket_text</code>.
     */
    public final TableField<GuildTicketsRecord, String> TICKET_TEXT = createField(DSL.name("ticket_text"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.guild_tickets.timestamp</code>.
     */
    public final TableField<GuildTicketsRecord, String> TIMESTAMP = createField(DSL.name("timestamp"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.guild_tickets.ticket_number</code>.
     */
    public final TableField<GuildTicketsRecord, Integer> TICKET_NUMBER = createField(DSL.name("ticket_number"), SQLDataType.INTEGER.nullable(false), this, "");

    private GuildTickets(Name alias, Table<GuildTicketsRecord> aliased) {
        this(alias, aliased, null);
    }

    private GuildTickets(Name alias, Table<GuildTicketsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.guild_tickets</code> table reference
     */
    public GuildTickets(String alias) {
        this(DSL.name(alias), GUILD_TICKETS);
    }

    /**
     * Create an aliased <code>public.guild_tickets</code> table reference
     */
    public GuildTickets(Name alias) {
        this(alias, GUILD_TICKETS);
    }

    /**
     * Create a <code>public.guild_tickets</code> table reference
     */
    public GuildTickets() {
        this(DSL.name("guild_tickets"), null);
    }

    public <O extends Record> GuildTickets(Table<O> child, ForeignKey<O, GuildTicketsRecord> key) {
        super(child, key, GUILD_TICKETS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public UniqueKey<GuildTicketsRecord> getPrimaryKey() {
        return Keys.GUILD_TICKETS_PKEY;
    }

    @Override
    public GuildTickets as(String alias) {
        return new GuildTickets(DSL.name(alias), this);
    }

    @Override
    public GuildTickets as(Name alias) {
        return new GuildTickets(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GuildTickets rename(String name) {
        return new GuildTickets(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GuildTickets rename(Name name) {
        return new GuildTickets(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, Long, Long, String, String, Integer> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
